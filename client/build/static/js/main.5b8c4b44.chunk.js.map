{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/user/ListUserComponent.jsx","components/user/AddUserComponent.jsx","components/user/EditUserComponent.jsx","components/RouterComponent.jsx","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","roles","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","get","headers","id","put","delete","Home","content","UserService","getPublicContent","Profile","currentUser","getCurrentUser","substring","substr","map","index","key","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","ListUserComponent","users","isLoading","reloadUserList","userService","getAdminBoard","console","log","deleteUserByAdmin","res","filter","Typography","variant","Button","color","onClick","addUser","Table","TableHead","TableRow","TableCell","align","Fade","in","isloading","transitionDelay","unmountOnExit","CircularProgress","TableBody","row","component","scope","Date","createdAt","toLocaleTimeString","updatedAt","editUser","deleteUser","justifyContent","Alert","elevation","mod","admin","AddUserComponent","saveUser","createUserByAdmin","open","handleClose","event","reason","formContainer","TextField","placeholder","fullWidth","margin","InputLabel","Select","labelId","defaultValue","MenuItem","Snackbar","onClose","autoHideDuration","severity","flexFlow","EditUserComponent","handleChange","updateUserByAdmin","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","loadUser","getUserByAdmin","AppRouter","path","exact","BoardAdmin","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","to","href","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5b8c4b44.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, roles) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      roles,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8080/api/test/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n  }\n\n  createUserByAdmin(user) {\n    return axios.post(API_URL + \"new\", user, { headers: authHeader() });\n  }\n\n  getUserByAdmin(id) {\n    return axios.get(API_URL + \"find/\" + id, { headers: authHeader() });\n  }\n  updateUserByAdmin(id, user) {\n    return axios.put(API_URL + id, user, { headers: authHeader() });\n  }\n  deleteUserByAdmin(id) {\n    return axios.delete(API_URL + id, { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport userService from \"../../services/user.service\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Fade from \"@material-ui/core/Fade\";\n\nclass ListUserComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      message: null,\n      isLoading: false,\n    };\n\n    this.reloadUserList = this.reloadUserList.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadUserList();\n  }\n\n  reloadUserList() {\n    this.setState({ isLoading: false });\n    userService.getAdminBoard().then(\n      (response) => {\n        this.setState({\n          users: response.data,\n        });\n        this.setState({ isLoading: true });\n        console.log(this.state.users);\n      },\n      (error) => {\n        this.setState({\n          users:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  deleteUser(id) {\n    userService.deleteUserByAdmin(id).then((res) => {\n      this.setState({ message: \"User deleted successfully.\" });\n      this.setState({\n        users: this.state.users.filter((user) => user.id !== id),\n      });\n    });\n  }\n\n  editUser(id) {\n    window.localStorage.setItem(\"id\", id);\n    this.props.history.push(\"/edit-user\");\n  }\n\n  addUser() {\n    window.localStorage.removeItem(\"id\");\n    this.props.history.push(\"/new\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" style={style}>\n          User Details\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.addUser()}\n        >\n          Add User\n        </Button>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell>UserName</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              {/* <TableCell align=\"right\">password</TableCell> */}\n              <TableCell align=\"right\">updateAt</TableCell>\n              <TableCell align=\"right\">createdAt</TableCell>\n            </TableRow>\n          </TableHead>\n          <Fade\n            in={this.state.isloading}\n            style={{\n              transitionDelay: this.state.isloading ? \"800ms\" : \"0ms\",\n            }}\n            unmountOnExit\n          >\n            <CircularProgress />\n          </Fade>\n          <TableBody>\n            {this.state.users.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.username}</TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                {/* <TableCell align=\"right\">{row.password}</TableCell> */}\n                <TableCell align=\"right\">\n                  {new Date(row.createdAt).toLocaleTimeString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {new Date(row.updatedAt).toLocaleTimeString()}\n                </TableCell>\n                <TableCell align=\"right\" onClick={() => this.editUser(row.id)}>\n                  <CreateIcon />\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  onClick={() => this.deleteUser(row.id)}\n                >\n                  <DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nexport default ListUserComponent;\n","import React, { Component } from \"react\";\nimport userService from \"../../services/user.service\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst roles = { user: [\"user\"], mod: [\"moderator\"], admin: [\"admin\"] };\nclass AddUserComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      role: [],\n      open: false,\n      message: null,\n    };\n    this.saveUser = this.saveUser.bind(this);\n  }\n\n  saveUser = (e) => {\n    e.preventDefault();\n    let user = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      roles: this.state.role,\n    };\n    userService.createUserByAdmin(user).then((res) => {\n      this.setState({ message: \"User added successfully.\" });\n      this.props.history.push(\"/admin\");\n      this.setState({ open: true });\n    });\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n    this.props.history.push(\"/admin\");\n  };\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" style={style}>\n          Add User\n        </Typography>\n        <form style={formContainer}>\n          <TextField\n            type=\"text\"\n            placeholder=\"Username\"\n            fullWidth\n            margin=\"normal\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n          />\n          <TextField\n            type=\"text\"\n            placeholder=\"Email\"\n            fullWidth\n            margin=\"normal\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChange}\n          />\n          <TextField\n            type=\"password\"\n            placeholder=\"Password\"\n            fullWidth\n            margin=\"normal\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.onChange}\n          />\n          <InputLabel htmlFor=\"grouped-select\">Role</InputLabel>\n          <Select\n            labelId=\"grouped-select\"\n            id=\"select\"\n            defaultValue=\"\"\n            value={this.state.role}\n            onChange={this.onChange}\n            name=\"role\"\n            fullWidth\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={roles.admin}>Admin</MenuItem>\n            <MenuItem value={roles.user}>User</MenuItem>\n            <MenuItem value={roles.mod}>Moderator</MenuItem>\n          </Select>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.saveUser}>\n            Save\n          </Button>\n        </form>\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          autoHideDuration={4000}\n        >\n          <Alert severity=\"success\">This is a success message!</Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n}\nconst formContainer = {\n  display: \"flex\",\n  flexFlow: \"row wrap\",\n};\n\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nexport default AddUserComponent;\n","import React, { Component } from \"react\";\nimport userService from \"../../services/user.service\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst roles = { user: [\"user\"], mod: [\"moderator\"], admin: [\"admin\"] };\n\nclass EditUserComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      role: [],\n      open: false,\n      message: null,\n    };\n    this.saveUser = this.saveUser.bind(this);\n    this.loadUser = this.loadUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  loadUser() {\n    userService\n      .getUserByAdmin(window.localStorage.getItem(\"id\"))\n      .then((res) => {\n        console.log(window.localStorage.getItem(\"id\"));\n        let user = res.data;\n        console.log(user);\n        this.setState({\n          username: user.username,\n          email: user.email,\n          role: user.roles,\n        });\n      });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  handleChange = (event) => {\n    this.setState({ role: event.target.value });\n  };\n\n  saveUser = (e) => {\n    e.preventDefault();\n    let user = {\n      username: this.state.username,\n      email: this.state.email,\n      roles: this.state.role,\n    };\n    userService\n      .updateUserByAdmin(window.localStorage.getItem(\"id\"), user)\n      .then((res) => {\n        this.setState({ message: \"User added successfully.\" });\n        this.props.history.push(\"/users\");\n      });\n  };\n  makeStyles = (theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  });\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" style={style}>\n          Edit User\n        </Typography>\n\n        <form variant=\"outlined\" className={makeStyles.formControl}>\n          <TextField\n            type=\"text\"\n            placeholder=\"Username\"\n            fullWidth\n            margin=\"normal\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n          />\n          <TextField\n            type=\"text\"\n            placeholder=\"Email\"\n            fullWidth\n            margin=\"normal\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChange}\n          />\n          <InputLabel htmlFor=\"grouped-select\">Role</InputLabel>\n          <Select\n            labelId=\"grouped-select\"\n            id=\"grouped-select\"\n            value={this.state.role}\n            onChange={this.handleChange}\n            fullWidth\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={roles.admin}>Admin</MenuItem>\n            <MenuItem value={roles.user}>User</MenuItem>\n            <MenuItem value={roles.mod}>Moderator</MenuItem>\n          </Select>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.saveUser}>\n            Save\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nexport default EditUserComponent;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ListUserComponent from \"./user/ListUserComponent\";\nimport AddUserComponent from \"./user/AddUserComponent\";\nimport EditUserComponent from \"./user/EditUserComponent\";\nimport React from \"react\";\n\nconst AppRouter = () => {\n  return (\n    <div style={style}>\n      <Router>\n        <Switch>\n          <Route path=\"/admin\" exact component={ListUserComponent} />\n          <Route path=\"/admin/users\" component={ListUserComponent} />\n          <Route path=\"/new\" component={AddUserComponent} />\n          <Route path=\"/edit-user\" component={EditUserComponent} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst style = {\n  marginTop: \"20px\",\n};\n\nexport default AppRouter;\n","import React, { Component } from \"react\";\n\nimport AppRouter from \"./RouterComponent\";\n\nexport default class BoardAdmin extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <AppRouter />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined\n    };\n  }\n\n  componentDidMount() {\n    AuthService.register(\"admin\",\"admin@email.com\",\"admin\",[\"admin\"]);\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              User Mangement app\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n\n              {showModeratorBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/mod\"} className=\"nav-link\">\n                    Moderator Board\n                  </Link>\n                </li>\n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/admin\"} className=\"nav-link\">\n                    Admin Board\n                  </Link>\n                </li>\n              )}\n\n              {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )}\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {currentUser.username}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                    LogOut\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}